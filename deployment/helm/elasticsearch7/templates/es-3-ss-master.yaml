#################################################################
# HCL Confidential
#
# OCO Source Materials
#
# Copyright HCL Technologies Limited 2020 
#
# The source code for this program is not published or otherwise
# divested of its trade secrets, irrespective of what has been
# deposited with the U.S. Copyright Office.
###################################################################
{{- $refProject := .Values.project -}}
{{- $refImage := .Values.common.image -}}
{{- $refDeployment := .Values.master -}}
{{- $refProbe := .Values.common.probe -}}
{{- $refReplicaCount := .Values.replicaCount -}}
{{- $calMasterNumber := div $refReplicaCount 2 | add1 | quote -}}
{{- $calDefaultMasterNumber := div .Values.master.replicas 2 | add1 | quote }}

---
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: StatefulSet
metadata:
  namespace: {{ .Values.namespace }}
  name: es-master-{{ .Values.elasticsearch.majorVersion }}
  labels:
    component: elasticsearch{{ .Values.elasticsearch.majorVersion }}
    role: master
spec:
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      component: elasticsearch{{ .Values.elasticsearch.majorVersion }}
      role: master
  serviceName: es-svc-ss-master-{{ .Values.elasticsearch.majorVersion }}
  {{ if $refReplicaCount | int | ne 0 }}replicas: {{ $refReplicaCount }}{{ else }}replicas: {{ $refDeployment.replicas }}{{ end }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: elasticsearch{{ .Values.elasticsearch.majorVersion }}
        role: master
    spec:
      serviceAccountName: elasticsearch{{ .Values.elasticsearch.majorVersion }}
      terminationGracePeriodSeconds: {{ .Values.common.terminationGracePeriodSeconds }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "type"
                operator: In
                values: ["generic"]
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                 - key: "role"
                   operator: In
                   values: ["master"]
      initContainers:
{{- if .Values.common.allowPrivilegedContainers }}
  {{- if eq .Values.common.allowPrivilegedContainers true }}
      - name: sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
  {{- end }}
{{- end }}
      - name: init-chmod-data
        image: {{ .Values.image.repository }}/elasticsearch{{ .Values.elasticsearch.majorVersion }}:{{ .Values.image.tag }}
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        command:
          - sh
          - -c
          - |
            chown -R {{ .Values.common.esUserID }}:{{ .Values.common.esGroupID }} /data /backup
            chmod -R 0700 /data /backup
            ls -l /data /backup
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: es-pvc
          mountPath: /data
        - name: backup
          mountPath: /backup
      containers:
      - name: es-master
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{ .Values.image.repository }}/elasticsearch{{ .Values.elasticsearch.majorVersion }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ $refImage.pullPolicy }}
        resources:
          limits:
            cpu: {{ $refDeployment.resources.limits.cpu }}
            memory: {{ $refDeployment.resources.limits.mem }}
          requests:
            cpu: {{ $refDeployment.resources.requests.cpu }}
            memory: {{ $refDeployment.resources.requests.mem }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: {{ .Values.common.env.CLUSTER_NAME }}
        - name: NUMBER_OF_MASTERS
          {{ if $refReplicaCount | int | ne 0 }}value: {{ $calMasterNumber }}{{ else }}value: {{ $calDefaultMasterNumber }}{{ end }}
        - name: MEMORY_LOCK
          value: {{ .Values.common.env.MEMORY_LOCK | quote}}
        - name: NODE_MASTER
          value: "true"
        {{ if .Values.common.networkHost }}
        - name: "NETWORK_HOST"
          value: {{ .Values.common.networkHost }}
        {{ end }}
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
        - name: APP_NAME
          value: "ElasticsearchMaster"
        - name: "ES_JAVA_OPTS"
          value: "{{ .Values.master.ES_JAVA_OPTS_XMS }} {{ .Values.master.ES_JAVA_OPTS_XMX }}"
        - name: "REPLICA_COUNT"
          value: "{{ .Values.replicaCount }}"
        - name: "INITIAL_MASTER_NODE"
          {{ if .Values.master.replicas | int | eq 1 }}
          value: {{ .Values.single_master_node }}
          {{ else }}
          value: {{ .Values.multi_master_nodes }}
          {{ end }} 
        - name: KEY_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.common.secretKeyRefName }}
              key: elasticsearch-key-password.txt
        ports:
        - containerPort: {{ $refProject.containerPortTCP }}
          name: transport
          protocol: TCP
        volumeMounts:
        - name: es-pvc
          mountPath: /data
        - name: backup
          mountPath: /backup
        - name: es-secrets-vol
          mountPath: /opt/elasticsearch-{{ .Values.elasticsearch.version }}/config/certs
          readOnly: true
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: {{ $refProbe.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ $refProbe.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ $refProbe.readinessProbe.timeoutSeconds }}
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: {{ $refProbe.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ $refProbe.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ $refProbe.livenessProbe.timeoutSeconds }}
      volumes:
        - name: backup
          {{- if (and (eq .Values.deploymentType "cloud") (not (empty .Values.deploymentType))) }}
          emptyDir: {}
          {{- else }}
          persistentVolumeClaim:
            claimName: es-pvc-backup-7
          {{- end }}
        - name: es-secrets-vol
          secret:
            secretName: {{ .Values.common.secretKeyRefName }}
      imagePullSecrets:
        - name: {{ .Values.common.imagePullSecrets.name }}
        
  volumeClaimTemplates:
  - metadata:
      name: es-pvc
      {{- if (and (eq .Values.deploymentType "cloud") (not (empty .Values.deploymentType))) }}
      annotations:
        # Still as alpha due AWS be k8s 1.5. Will be moved to "beta" when upgraded
        volume.alpha.kubernetes.io/storage-class: {{ .Values.common.storageClassName }}
      {{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if (and (eq .Values.deploymentType "cloud") (not (empty .Values.deploymentType))) }}
      resources:
        requests:
          storage: 250Mi
      {{- else }}
      storageClassName: {{ .Values.common.storageClassName }}
      {{- end }}
